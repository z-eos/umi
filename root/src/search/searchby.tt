[% # -*- mode: web; mode: follow -*- %]
[% META title = 'Search Results' %]
[% # stash.name %]

[% IF from_searchadvanced %]
<[% site.pageheading %] class="[% site.pageheadingclass %]">
<i class="fas fa-search-plus fa-lg mr-3 text-muted"></i>
Search Advanced
<small><em class="text-muted text-monospace">( advanced search form )</em></small>
</[% site.pageheading %]>
<hr>

[% form.render %]

[% USE date(time = date.now, format = '%Y.%m.%d', locale = 'en_US') %]

<script>
 $(function() {
   var $search_history = $("#search_history");
   var $searchhistory = $('.searchhistory');
   var $searchaccount = $('.searchaccount');
   var $base_dn = $("#base_dn");
   // if no checkbox exist (some other page for example)
   if ( !$search_history.length ) return;
   // is checkbox attribute `checked' set?
   function search_history () {
     $search_history[0].checked ? $searchhistory.show(300) : $searchhistory.hide(300);
     $search_history[0].checked ? $searchaccount.hide(300) : $searchaccount.show(300);
   };
   // first run hides checkbox related fields
   search_history();
   // checkbox click unhides/hides the fields
   $search_history.on('click', search_history);		
 })();
</script>
[% ELSE %]
<div class="row w-100 py-5">
  <div class="col-xs-6 col-sm-6 col-md-3 col-lg-3">
    <[% site.pageheading %] class="font-weight-bold">
    <i class="fas fa-search fa-lg text-muted"></i>
    Search Results
    <sup>
      <abbr  title="not all objects could be found via predefined search items, to search for all objects use advanced search menu item" class="initialism">
	<i class="fa fa-info-circle text-info"></i>
      </abbr>
    </sup>
    </[% site.pageheading %]>
  </div>
  <div class="col-xs-6 col-sm-6 col-md-9 col-lg-9">
    <dl class="row text-monospace text-muted umi-text-xs">
      <dt class="col-1 text-right">base:</dt>  <dd class="col-11 text-break">[% base_dn %]</dd>
      <dt class="col-1 text-right">filter:</dt><dd class="col-11 text-break">[% filter %]</dd>
    </dl>
  </div>
</div>
[% END %]

[% dds_max_ttl_years = 10 %]

[% INCLUDE ldap_err.tt %]

[% blocked = '';
   btn_blocked = ' btn-link';
   blocked_title = '';
   branch_class = ' ml-1';
   leaf_class = ' ml-3';
   dynamic_object = '<i class="fa fa-clock fa-lg" title="dynamic object"></i>';

   IF entries.size == 1;
   show = 'show';
   chevron_toggle = 'down';
   ELSE;
   show = '';
   chevron_toggle = 'right';
   END %]

[% MACRO buttonizer  BLOCK %]
<form id="buttonizer_form[% buttonizer_id %]"
      method="POST"
      action="/searchby"
      class="form-inline formajaxer">
  <input type="hidden" name="ldap_subtree" value="[% buttonizer_dn %]">
  <button type="submit" class="btn btn-link card-link p-0"
	  title="click to open this object"
	  id="buttonizer_button[% buttonizer_id %]">
    [% buttonizer_text %]
  </button>
</form>
[% END %]

[% MACRO getit BLOCK %]
<div class="btn-group" role="group">
  <button class="btn btn-info p-3 my-3"
	  title="Copy attribute value to clipboard"
	  onclick="copyToClipboard('#getitid')" type="button">
    <span><i class="fas fa-copy fa-lg fa-fw"></i></span>
  </button>
  <button class="btn btn-info p-3 my-3"
	  onclick="downloadString(document.querySelector('#getitid').innerText, 'text/plain', 'attribute-value.txt')"
       	  title="Download attribute value as file" type="button">
    <span><i class="fas fa-file-download fa-lg fa-fw"></i></span>
  </button>
</div>
[% END %]
[% d_id = '' %]

<div class="table-responsive umi-overflow-x-vis">
  <table class="table table-sm table-borderless">
    <thead>
      <tr>
	<td colspan=2>
	  <div class="btn-group" role="group">
	    <a href="#"
	       class="collapse_in_out btn btn-secondary text-white" role="button"
	       title="Collapse In/Out Each Element On This Page"
	       accesskey="f"
	       data-target="#collapse"
	       data-toggle="collapse"
	       data-parent="#accordion"
	       tabindex="0">
	      <i id="chevron_switcher" class="fas fa-fw [% site.icons.toggle %][% chevron_toggle %]"></i>
	    </a>

	    [% IF c.check_user_roles('admin') %]
	    <!-- ###### Search Results export to LDIF start -->
	    <div class="float-right">
	    <form method="POST" role="form" action="/searchby/ldif_gen2f" id="f_ldif_gen2f">
	      <input type="hidden" name="ldap_ldif_base"      value="[% base_dn %]">
	      <input type="hidden" name="ldap_ldif_filter"    value="[% filter %]">
	      <input type="hidden" name="ldap_ldif_recursive" value="1">
	      <input type="hidden" name="ldap_ldif_scope"     value="[% scope %]">
	      [% FOREACH item IN attrs %]
	      <input type="hidden"  name="ldap_ldif_attrs" value="[% item %]">
	      [% END %]
	      <a href="#" class="btn btn-secondary text-white umi-btn-event umi-btn-logic"
		      value="[% base_dn %]"
		      name="ldap_ldif"
		      data-umiact="/searchby/ldif_gen2f"
		      title='save LDIF bellow as file: [% final_message.outfile_name %]'
		      type="submit">
		<i class="fas fa-fw fa-file-export fa-lg"></i>
	      </a>
	    </form>
	    <!-- ###### Search Results export to LDIF end -->
	    </div>
	    [% END %]
	    
	  </div>
	  <div class="float-right">
	    found [% entrieskeys.size %] objects
	  </div>
	</td>
      </tr>
    </thead>
    <tbody>
      <tr class="">
	<td class="">
	  <!-- >pre>[% # USE dumper() %][% # dumper.dump(base_dn,base_icon,entries,entrieskeys,filter,final_message,from_searchadvanced,schema,scope,services,template) %]</pre -->
	</td>
      </tr>
      
      [% root_of_rec = '<i class="far fa-dot-circle fa-lg"></i>';
	 FOREACH entrykey IN entrieskeys;
	 entry.key = entrykey # dn of the current entry;
	 entry.val = entries.$entrykey;

	 dn = entry.key.split(',|=').hash    # here we preparing hash of each dn;
	 # here we preparing uniqe suffix to be added to objects id (like modals e.t.c.);
	 id_suffix = '_' _ entry.key.split(',').0.split('=').1.replace('[-@:\. ]', '_') _ '_' _ loop.index;

	 IF entry.val.mgmnt.is_blocked;
	 blocked = ' text-danger';
	 btn_blocked = ' bg-danger';
	 blocked_title = 'NOTE: This DN was blocked! To unblock, remove root dn from the group &laquo;blocked&raquo; and manage each service account manualy (in general it is password change).';
	 ELSE;
	 blocked = '';
	 blocked_title = '';
	 btn_blocked = ' btn-link';
	 END;

	 # === OBJECT CLASSES ACCORDING THE RDN DEFINITION ===;
	 IF entry.val.mgmnt.is_root && entry.key.match('People');
	 entry_text_size = 'umi-text-lg';
	 entry_icon_size = 'fa-2x';
	 root_of_rec_btn = 'col-xs-12 text-truncate';
	 ELSIF entry.key.match('^author');
	 entry_text_size = '';
	 entry_icon_size = 'fa-lg';
	 root_of_rec_btn = 'col-xs-12 text-truncate';
	 ELSE;
	 entry_text_size = 'umi-text-sm';
	 entry_icon_size = 'fa-lg';
	 root_of_rec_btn = 'col-xs-12 text-truncate';
	 END;


	 # === OBJECT TYPE CARD COLOR DEFINITION ===;
	 IF entry.val.mgmnt.is_blocked ||
	 entry.val.mgmnt.cert_expired ||
	 (entry.val.attrs.exists('umiOvpnAddStatus') &&
	   entry.val.attrs.umiOvpnAddStatus.0 != 'enabled');
	 tr_color = 'danger';
	 ELSIF (entry.val.mgmnt.is_root && entry.val.mgmnt.is_account)
	 || ! entry.val.mgmnt.is_account;
	 tr_color = 'info';
	 accesskey = '1';
	 ELSIF entry.key.match('^[uid]|[cn]=.*,author');
	 tr_color = 'success';
	 accesskey = '3';
	 ELSE;
	 tr_color = 'warning';
	 accesskey = '2';
	 END;

	 num_of_dc = 0;
	 FOREACH pattrn IN entry.key.split(',');
	 SET num_of_dc = num_of_dc + 1 IF pattrn.match('dc=');
	 END %]

      [% # === ACLs ACLs ACLs ACLs ACLs ACLs ACLs ACLs === %]
      [% # === DROPDOWN MENU AND MODALS RELATED LOGICS === %]

      [% #     does current entry belong to admin? %]
      [% admin_owned =
	 ! c.check_user_roles('admin') &&
	 entry.val.mgmnt.root_obj_groups.admin.defined &&
	 entry.val.mgmnt.root_obj_groups.admin == 1 ? 0 : 1;

	 # IS ENTRY RESIDES IN accesslog DB ?
	 is_log_obj = entry.val.mgmnt.is_log.match('no') ? 0 : 1;
	 # ROLLABLE BACK IF reqType IS modify
	 to_rollback = entry.val.mgmnt.is_log.match('modify') ? 1 : 0 %]

      <tr class="">
	<td class="py-1">
	  [% # search result header start %]
	  <div class="m-0" id="accordion[% loop.index %]">
	    <div class="card">
	      [% # card-header start %]
	      <div class="card-header text-white bg-[% tr_color %] clearfix p-0">
		
		[% INCLUDE search/searchby_menu_dropdown.tt;

		   user_name = '';
		   IF entry.key.match('People');
		   root_of_rec = entry.val.root.sn _ ' ' _ entry.val.root.givenName;
		   user_name = root_of_rec;
		   # !!! HARDCODED customization, depends of DN structure !!!;
		   ELSIF entry.val.mgmnt.is_root && entry.val.mgmnt.is_inventory;
		   root_of_rec = entry.key.split(',').slice(-1 * ( 3 + num_of_dc), -1 ).0.split('=').1;
		   ELSIF entry.key.match('Inventory') && entry.key.split(',').size <= ( 3 + num_of_dc) ;
		   root_of_rec = '<i class="fa fa-th-large fa-lg"></i>';
		   ELSIF entry.key.match('reqStart');
		   root_of_rec = '<i class="' _ base_icon.history _ ' fa-lg"></i>';
		   END;

		   # !!! HARDCODED customization, depends of DN structure !!!;
		   IF entry.key.match('People');
		   root_obj_dn = entry.key.split(',').slice(-1 * ( 2 + num_of_dc), -1 ).join(',');
		   ELSIF entry.key.match('Inventory') && entry.key.split(',').size > ( 3 + num_of_dc);
		   root_obj_dn = entry.key.split(',').slice(-1 * ( 4 + num_of_dc), -1 ).join(',');
		   ELSE;
		   root_obj_dn = entry.key;
		   END %]

		<div class="col-lg-2 col-md-2 col-xs-1 col-sm-1">
		  <form class="formajaxer inline-group" role="form" method="POST" action="/searchby">
		    <input type="hidden"  name="ldap_subtree" value="[% root_obj_dn %]">
		    <button class="[% root_of_rec_btn %] btn umi-search d-none d-md-block"
			    accesskey="0"
			    title="[% user_name %] click to open object full tree [% blocked_title %]"
			    type="submit">
		      <span class="to-root-object [% entry_text_size %]"><b>[% root_of_rec %]</b></span>
		    </button>
		    <button class="btn btn-link umi-search d-sm-none"
			    title="Click to open root object of this account. [% blocked_title %]"
			    type="submit">
		      <i class="[% entry_icon_size %] fas [% site.icons.root_obj %]">&nbsp;&nbsp;</i>
		    </button>
		  </form>
		</div>

		<div class="inline-group inline-item-fluid text-truncate" role="group">
		  <!-- p class="visible-lg-block visible-md-block"></p>&nbsp; -->
		  
		  [% icon_color = '';
		     # --- DETECTION OF "ANYTHING" DISABLED, TO COLOR IT'S ICON AND TEXT ---;
		     #     if certificate and it is not enabled then color to danger;
		     # IF entry.val.attrs.exists('umiOvpnAddStatus') && entry.val.attrs.umiOvpnAddStatus.0 != 'enabled';
		     # icon_color = 'text-pink';
		     # END
		     %]


		  [% # --- ICON, WHICH IS AFTER CLICK-TO-OPEN-ROOT-OBJECT BUTTON --- %]
		  [% IF entry.val.mgmnt.is_root && entry.key.match('People')  # --- ABCDE start %]
		  <span class="inline-group to-root-object umi-text-lg" title="">
		    <form role="form" method="POST" class="formajaxer" action="/searchby/user_preferences">
		      <input type="hidden" name="user_preferences" value="[% entry.key %]">
		      <button type="submit"
			      class="btn btn-link text-white"
			      title="look user object subtree data">
			[% IF entry.val.mgmnt.dynamicObject;
			   dynamic_object;
			   END;

			   IF entry.val.mgmnt.is_blocked;
			   pref_color=' text-info';
			   ELSE;
			   pref_color='';
			   END %]  
			
			<i class="[% base_icon.People _ ' ' _ entry_icon_size _ ' ' _ pref_color%]"></i>
		      </button>
		    </form>
		    [% ELSE		    ;
		       IF entry.val.mgmnt.is_root && entry.key.match('Inventory'); # --- FGHIJ start
		       ph_title="Inventory Root Object";
		       ph_class="umi-search-padding " _ base_icon.inventory _ ' ' _ entry_icon_size;
		       ELSIF entry.val.mgmnt.is_root && entry.key.match('Sendmail');
		       ph_title="MTA Root Object";
		       ph_class="umi-search-padding " _ base_icon.mta _ ' ' _ entry_icon_size;
		       ELSIF entry.val.mgmnt.is_root && entry.key.match('GitACL');
		       ph_title="GitACL Root Object";
		       ph_class="umi-search-padding " _ base_icon.GitACL _ ' ' _ entry_icon_size;
		       ELSIF entry.val.mgmnt.is_root && entry.key.match('DHCP');
		       ph_title="DHCP Root Object";
		       ph_class="umi-search-padding " _ base_icon.DHCP _ ' ' _ entry_icon_size;
		       ELSIF entry.val.mgmnt.is_root && entry.key.match('reqStart');

		       IF entry.val.attrs.reqType.0 == 'add';
		       ph_title="History Object Request type: Add";
		       ph_class="umi-search-padding " _ entry_icon_size _ " fas fa-plus";
		       ELSIF entry.val.attrs.reqType.0 == 'delete';
		       ph_title="History Object Request type: Delete";
		       ph_class="umi-search-padding " _ entry_icon_size _ " fas fa-minus";
		       ELSIF entry.val.attrs.reqType.0 == 'modify';
		       ph_title="History Object Request type: Modify";
		       ph_class="umi-search-padding " _ entry_icon_size _ " fas fa-edit";
		       ELSIF entry.val.attrs.reqType.0 == 'modrdn';
		       ph_title="History Object Request type: ModRDN";
		       ph_meta=[ 'umi-search-padding '
			 entry_icon_size
			 'fas fa-share-alt-square' ];
		       ph_class=ph_meta.join;
		       END;
		       
		       ELSIF entry.val.mgmnt.is_root && ! entry.key.match('People');
		       ph_title="Root Objectt";
		       ph_class="umi-search-padding " _ base_icon.default _ ' ' _ entry_icon_size;

		       IF entry.val.mgmnt.is_blocked;
		       ph_class=ph_class _ ' text-info';
		       END;

		       # --- SERVICE ICON START ----------------------------------------------------
		       ELSIF entry.key.match('^author');
		       cur_svc = dn.authorizedService.split('@').0;
		       IF services.$cur_svc.icon;
		       ph_title=services.$cur_svc.descr _ " Service Account Branch";
		       ph_meta=[ 'umi-search-padding '
			 services.$cur_svc.icon
			 entry_icon_size
			 branch_class ];
		       ph_class=ph_meta.join;
		       ELSE;
		       ph_title="Service Account Branch";
		       ph_class="umi-search-padding fas fa-code-fork " _ branch_class;
		       END;

		       IF entry.val.mgmnt.is_blocked;
		       ph_class=ph_class _ ' text-warning';
		       END;

		       ELSIF entry.key.match('^[uid]|[cn]=.*,author');
		       cur_svc = dn.authorizedService.split('@').0;
		       IF services.$cur_svc.icon;
		       ph_title=services.$cur_svc.descr _ " Service Account";
		       ph_meta=[ 'umi-search-padding '
			 services.$cur_svc.icon
			 entry_icon_size
			 icon_color
			 leaf_class ];
		       ph_class=ph_meta.join;

		       ELSE;
		       ph_title="Service Account";
		       ph_meta=[ 'umi-search-padding fas fa-leaf'
			 leaf_class
			 entry_icon_size ];
		       ph_class=ph_meta.join;
		       END;

		       IF entry.val.mgmnt.is_blocked;
		       ph_class=ph_class _ ' text-success';
		       END;

		       # --- SERVICES ICON STOP  ---------------------------------------------------

		       ELSIF entry.key.match('GitACL');
		       ph_title="Subject to GitACL";
		       ph_class="umi-search-padding " _ base_icon.GitACL _ ' ' _ branch_class _ ' ' _ entry_icon_size;
		       ELSIF entry.key.match('DHCP');
		       ph_title="DHCP Object";
		       ph_class="umi-search-padding " _ base_icon.DHCP _ ' ' _ branch_class _ ' ' _ entry_icon_size;
		       ELSIF entry.key.match('PGP');
		       ph_title="GPG Object";
		       ph_class="umi-search-padding " _ base_icon.pgp _ ' ' _ branch_class _ ' ' _ entry_icon_size;
		       ELSIF entry.key.match('^cn=.*,ou=Inventory');
		       ph_title="Subject to Inventory";
		       ph_class="umi-search-padding fas fa-tag " _ branch_class _ ' ' _ entry_icon_size;
		       ELSIF entry.key.match(',ou=Sendmail');
		       ph_title="Subject to Sendmail";
		       ph_class="umi-search-padding " _ base_icon.mta _ ' ' _ branch_class _ ' ' _ entry_icon_size;
		       ELSIF base_ico.${dn.ou};
		       ph_title="Service Account Branch";
		       ph_class="umi-search-padding " _ base_icon.${dn.ou} _ ' ' _ entry_icon_size;
		       ELSE;
		       ph_title="Service Account Branch";
		       ph_class="umi-search-padding fas fa-code-fork " _ entry_icon_size;
		       END; # --- FGHIJ stop
		       
		       END;
		       # --- ABCDE stop %]
		    
		    [% # dn of the select result object (the one after service icon) %]

		    <form class="formajaxer" role="form" method="POST" action="/searchby">
		      <input type="hidden"  name="ldap_subtree" value="[% entry.key %]">
		      <button class="[% root_of_rec_btn %] btn umi-search visible-lg-block visible-md-block"
			      title='click to open this and children (if any) of this object'
			      type="submit">

			<span class="to-root-object">
			  
			  [% IF ! entry.val.mgmnt.is_root || entry.key.match('reqStart') %]
			  <i class="[% ph_class %]" title="[% ph_title %]"></i>
			  [% END %]
			  
			  <b class="text-monospace [% icon_color _ ' ' _ entry_text_size %]">
			    [% IF entry.key.match('People');
			       entry.key.replace('uid=','').replace('authorizedService=','').split(',').slice(0,-3).join('<i class="fa fa-chevron-right mx-4"></i>');
			       entry.val.attrs.reqStart.0;
			       ELSE;
			       entry.key;
			       END %]
			  </b>
			  
			</span>

		      </button>
		    </form>
		</div>
	      </div>
	      [% # card-header stop %]
	      
	      <div class="col-2">

		<!-- small class="umi-text-xs" -->
		<ul class="fa-ul text-white text-left m-0 umi-text-tiny text-monospace">
		  
		  [% crtd = entry.val.root.ts.createTimestamp _ ' by ' _ entry.val.root.ts.creatorsName _ '&nbsp' %]
		  <li title="created (YYYYmmddHHMM), GMT: [% crtd %]" class="d-none.d-lg-block.d-xl-none d-none.d-md-block.d-lg-none">
		    <i class="fa-li fas fa-sm fa-hourglass-start"></i>
		    [% entry.val.root.ts.createTimestamp _ ' <b>' _ entry.val.root.ts.creatorsName _ '</b>&nbsp' %]
		  </li>
		  
		  [% IF entry.val.attrs.createTimestamp.0 != entry.val.attrs.modifyTimestamp.0 %]
		  [%  mdfd = entry.val.root.ts.modifyTimestamp _ ' by ' _ entry.val.root.ts.modifiersName _ '&nbsp' %]
		  <li title="modified, GMT: [% mdfd %]" class="d-none.d-lg-block.d-xl-none d-none.d-md-block.d-lg-none">
		    <i class="fa-li fas fa-sm fa-hourglass-half"></i>
		    [%  entry.val.root.ts.modifyTimestamp _ ' <b>' _ entry.val.root.ts.modifiersName _ '</b>&nbsp' %]
		  </li>
		  [% END %]

		  [% IF entry.val.mgmnt.dynamicObject %]
		  <li title="expire, GMT" class="d-none.d-lg-block.d-xl-none d-none.d-md-block.d-lg-none">
		    <i class="fa-li fas fa-sm fa-hourglass-end"></i>
		    [%  entry.val.root.ts.entryExpireTimestamp _ '&nbsp;' %]
		  </li>
		  [% END %]

		</ul>
		<!-- /small -->

	      </div>
	    </div>
	  </div>
	  [% # search result header stop %]
	  [% # search result body start %]
	  <div id="collapse[% loop.index %]" class="border border-[% tr_color %] umi-collapsable collapse [% show %]">
	    <div class="card">
	      <div class="card-body">
		<dl class="row">
		  <dt class="card-title col-2 text-right text-truncate">dn:</dt>
		  <dd class="card-title col-10 font-weight-bolder text-monospace text-break">[% entry.key %]</dd>

		  [% FOREACH h_attr IN entry.val.attrs # h_attr is for each attr/value pair hash;
		     d_class = '';
		     # here we skiping some technical attributes
		     NEXT IF h_attr.key == 'creatorsName' || h_attr.key == 'createTimestamp' ||
		     h_attr.key == 'modifiersName'        || h_attr.key == 'modifyTimestamp';

		     attr_name = h_attr.key; # attribute name
		     IF h_attr.key == 'umiOvpnAddStatus' && h_attr.value.0 != 'enabled';
		     d_class = 'bg-danger text-uppercase font-weight-bold text-white';
		     ELSE;
		     d_class = '';
		     END %]
		  <dt class="col-2 text-right text-truncate">
		    [% IF h_attr.key.match(';binary') %]
		    [% bindata = '&nbsp;<abbr title="binary data"><i class="fa ' _ site.icons.binary_data _ ' text-info" title="binary data"></i></abbr>' %]
		    [% h_attr.key.replace(';binary', bindata) %]&#58;
		    [% ELSIF h_attr.key == 'userPKCS12' %]
		    [% h_attr.key.trim %]&nbsp;<abbr title="binary data"><span class="fa [% binary_data %] text-info" title="binary data"></span></abbr>&#58;
		    [% ELSIF h_attr.key == 'pgpKey' %]
		    [% h_attr.key.trim %]&#58;
		    [% getit %]
		    [% d_id='getitid' %]
		    [% ELSE %]
		    [% h_attr.key.trim %]&#58;
		    [% END %]
		  </dt>
		  <dd id="[% d_id %]" class="col-10 text-monospace [% d_class %]">
		    [% IF h_attr.key == 'userPassword' %]
		    [% aster = '<i class="fa fa-circle"></i>&nbsp;' %][% aster.repeat(8)%]
		    [% ELSIF h_attr.key.match('userCertificate;binary') ||
		       h_attr.key.match('certificateRevocationList;binary') ||
		       h_attr.key.match('cACertificate;binary')%]
		    <br>
		    <small class="float-left">
		      <dl class="row">
			[% FOREACH cert IN h_attr.value;
			   NEXT IF cert.key == 'cert';
			   NEXT IF cert.key == 'error' && ! cert.value;
			   IF h_attr.key.match('certificateRevocationList;binary') &&
			   cert.key.match('RevokedCertificates') %]
			<dt class="col-sm-3 text-right">[%   cert.key %]</dt>
			<dd class="col-sm-9 text-monospace">
			  <div class="card">
			    <div class="card-header bg-info">
			      <b class="card-title text-white">
				<a class="collapsed chevron_toggleable" data-toggle="collapse"
				   href="#collapse_personal_data" aria-expanded="true" aria-controls="collapse_personal_data">
				  <i class="fas fa-fw [% site.icons.toggle_down %] text-white"></i>
				</a>
				revoked certificates list
			      </b>
			    </div>
			    <div id="collapse_personal_data" class="umi-collapsable collapse" aria-labelledby="heading_personal_data">
			      <div class="card-body">
				<table class="table table-condensed table-striped">
				  <thead>
				    <tr class="info">
				      <th>S/N<sub>10</sub></th>
				      <th>S/N<sub>hex</sub></th>
				      <th><i class="far fa-calendar-alt"></i></th>
				    </tr>
				  </thead>
				  [% FOREACH key IN cert.value.keys.sort %]
				  <tr>
				    <td>[% key %]</td>
				    <td>[% cert.value.$key.sn_hex %]</td>
				    <td>[% cert.value.$key.revocationDate %]</td>
				  </tr>
				  [% END %]
				</table>
			      </div>
			    </div>
			  </div>
			</dd>
			[%     ELSE %]
			<dt class="col-2 text-right">[%   cert.key %]</dt>
			<dd class="col-10 text-monospace text-left">[% cert.value %]</dd>
			[%     END %]
			[% END %]
		      </dl>
		    </small>
		    [% ELSIF h_attr.key == 'gidNumber' && entry.val.root.PrimaryGroupName;
		       buttonizer( buttonizer_id=entry.val.root.PrimaryGroupName,
			 buttonizer_dn=entry.val.root.PrimaryGroupNameDn,
			 buttonizer_text= h_attr.value.0 _ ' ( <em>' _ entry.val.root.PrimaryGroupName _ '</em> )' );
		       ELSIF h_attr.key == 'userPKCS12' %]
		    <kbd class="fa fa-file-o">&nbsp;Binary Data</kbd>
		    [% ELSIF h_attr.key == 'pgpKey' || h_attr.key == 'mu-sieveOnReceive' ||	 h_attr.key == 'reqOldModDiff' %]
		    <small><pre>[% h_attr.value.list.join %]</pre></small>		 
		    [% ELSIF h_attr.key == 'jpegPhoto';	  
		       img = '<img class="table-';
		       img _ tr_color _ ' ' _ h_attr.value;
		       ELSIF entry.val.is_arr.$attr_name;
		       FOREACH i IN h_attr.value;
		       IF h_attr.key == 'sshPublicKey' || h_attr.key == 'grayPublicKey' %]
		    <div class="kludge-minus-700px">
		      <small class="text-monospace">[% i %]</small>
		    </div>
		    [% ELSE;
		       IF schema.${h_attr.key} == 'distinguishedNameMatch' ||
	               schema.${h_attr.key} == 'distinguishedName' ||
	               i.match('^.*ou=.*,dc=.*');
	               v = buttonizer( buttonizer_id=id_suffix, buttonizer_dn=i, buttonizer_text=i );
		       ELSE;
		       v = i;
		       END;

		       IF v.match('form');
		       v.trim;
		       ELSIF loop.last; # if last element or button
		       FILTER html;
		       v.trim;
		       END;
		       ELSE # not last element of array %]
		    <div>[%  FILTER html %][% v.trim %][% END %]</div>
		    [% END;
		       END;
		       END;
		       ELSE;
		       IF ${h_attr.value}.match('^.*,dc=.*');
		       buttonizer( buttonizer_id=id_suffix,
			 buttonizer_dn=h_attr.value,
			 buttonizer_text=h_attr.value.trim );
		       ELSE;
		       FILTER html;
		       h_attr.value.trim;
		       END;
		       END;
		       END %]
		  </dd>
		  [% END %] [% # FOREACH h_attr IN entry.val.attrs %]
		</dl>
	      </div>
	    </div>
	  </div>
	  [% # search result body stop %]

	  [% INCLUDE search/searchby_modals.tt %]
	</td>
      </tr>
      [% END %]
    </tbody>
  </table>
</div>

<script>

 /*
  * searchby result/s un/collaps-er (@ searchby.tt)
  */ 

 $('.collapse_in_out').on('click', function() {
   // console.log('toggle event from searchby.tt');
   $("[id^=collaps]").toggleClass('umi-collapsable collapse show').toggleClass('umi-collapsable collapse');
   $("[id^=chevron_switcher]").toggleClass('[% site.icons.toggle_right %]').toggleClass('[% site.icons.toggle_down %]');
 });

 $('.chevron_toggleable').on('click', function() { 
   if ($(this).hasClass('collapsed')) { 
     // console.log('searchby.tt: chevron_toggleable [% site.icons.toggle_right %]');
     $(this).find('#chevron_switcher').removeClass('[% site.icons.toggle_down %]').addClass('[% site.icons.toggle_right %]')
   } else { 
     // console.log('searchby.tt: chevron_toggleable [% site.icons.toggle_down %]');
     $(this).find('#chevron_switcher').removeClass('[% site.icons.toggle_right %]').addClass('[% site.icons.toggle_down %]')
   }
 })

</script>

<script src="/static/js/umi-holder.js"></script>

<script src="/static/js/umi-ddmenu-sort.js"></script>
